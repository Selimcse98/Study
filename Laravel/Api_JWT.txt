https://www.youtube.com/watch?v=Ik0bkMkUogw&list=PLpvpznviFFFJUWlHylwipLLr1iLYs-cft&index=4
https://scotch.io/tutorials/token-based-authentication-for-angularjs-and-laravel-apps
https://github.com/tymondesigns/jwt-auth/wiki/Installation

install curl, php, homebrew, openSSL first.

$ brew install php56 --with-homebrew-curl --with-openssl

$ sudo composer require tymon/jwt-auth:0.5.*

$ composer update

Publish jwt service provider which generates the config files
$ php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\JWTAuthServiceProvider"
Copied File [/vendor/tymon/jwt-auth/src/config/config.php] To [/config/jwt.php]
Publishing complete for tag []!

jwt.php file will be generated under App\config directory

configure App\config\app.php
provider
Tymon\JWTAuth\Providers\JWTAuthServiceProvider::class,

alias at App\config\app.php
'JWTAuth' => Tymon\JWTAuth\Facades\JWTAuth::class,
'JWTFactory' => Tymon\JWTAuth\Facades\JWTFactory::class,

$ php artisan jwt:generate
jwt-auth secret [qLpHJgusXF4f5GFpcv9i7IdkFWXGstEv] set successfully.

App\config\jwt.php
'secret' => env('JWT_SECRET', 'qLpHJgusXF4f5GFpcv9i7IdkFWXGstEv'),

setup middleware, register App\Http\Kernel.php
'jwt.auth' => \Tymon\JWTAuth\MiddlewareGetUserFromToken::class,
'jwt.refresh' => \Tymon\JWTAuth\MiddlewareRefreshToken::class,

public function authenticate(Request $request)
    {
        $credentials = $request->only('email','password');
        try {
            if (!($token = JWTAuth::attempt($credentials))) {
                return response()->json(['error' => 'User Credentials are not correct'], 401);
            }
        }catch (JWTException $ex){
            return response()->json(['error' => 'Something went wrong'], 500);
        }
        return response()->json(compact('token'));
    }

$api->post('authenticate','App\Http\Controllers\Auth\AuthController@authenticate');
http://localhost:8000/api/authenticate

$ curl -X POST -H "Content-Type: application/json" -d '{"email":"john.doe1@gmail.com","password":"password"}' http://localhost:8000/api/authenticate
$ curl -X POST  -d '{"email":"john.doe1@gmail.com","password":"password"}' http://localhost:8000/api/authenticate
for any valid request will return different token every time


  public function authenticate1(Request $request)
    {
        $credentials = $request->only('email','password');
        try {
            if (!$token = JWTAuth::attempt($credentials)) {
                return $this->response->error(['error' => 'User Credentials are not correct'], 401);
            }
        }catch (JWTException $ex){
            return $this->response->error(['error' => 'Something went wrong'], 500);
        }
        return $this->response->array(compact('token'))->setStatusCode('200');
    }


$ curl -X POST -H "Content-Type: application/json" -d '{"email":"john.doe1@gmail.com","password":"password"}' http://localhost:8000/api/authenticate1

{"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6XC9cL2xvY2FsaG9zdDo4MDAwXC9hcGlcL2F1dGhlbnRpY2F0ZTEiLCJpYXQiOjE0Njk3NTY2ODEsImV4cCI6MTQ2OTc2MDI4MSwibmJmIjoxNDY5NzU2NjgxLCJqdGkiOiJiNjI1MTk5YWFhMDMxMzY1YjNmNWMxMjBmMmNhY2JjOSJ9.w9DbKP7CeU4WjGdnQolkFrq83OCy9C268MJ-04R3zZ0"}


  public function authenticate1(Request $request)
    {
        $credentials = $request->only('email','password');
        try {
            if (!$token = JWTAuth::attempt($credentials)) {
                return $this->response->errorUnauthorized();
            }
        }catch (JWTException $ex){
            return $this->response->errorInternal();
        }
        return $this->response->array(compact('token'))->setStatusCode('200');
    }

    